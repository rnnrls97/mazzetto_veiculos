{
  "version": 3,
  "sources": ["../../@unhead/addons/dist/index.mjs"],
  "sourcesContent": ["import { defineHeadPlugin, resolveTitleTemplate } from '@unhead/shared';\n\n// @__NO_SIDE_EFFECTS__\nfunction InferSeoMetaPlugin(options = {}) {\n  return defineHeadPlugin({\n    hooks: {\n      entries: {\n        resolve({ entries }) {\n          let titleTemplate = null;\n          for (const entry of entries) {\n            const inputKey = entry.resolvedInput ? \"resolvedInput\" : \"input\";\n            const input = entry[inputKey];\n            if (typeof input.titleTemplate !== \"undefined\")\n              titleTemplate = input.titleTemplate;\n          }\n          for (const entry of entries) {\n            const inputKey = entry.resolvedInput ? \"resolvedInput\" : \"input\";\n            const input = entry[inputKey];\n            const resolvedMeta = input.meta || [];\n            titleTemplate = resolveTitleTemplate(titleTemplate, input.title);\n            const title = input.title;\n            const description = resolvedMeta.find((meta) => meta.name === \"description\")?.content;\n            const hasOgTitle = resolvedMeta.some((meta) => meta.property === \"og:title\");\n            const hasOgImage = resolvedMeta.some((meta) => meta.property === \"og:image\");\n            const hasTwitterCard = resolvedMeta.some((meta) => meta.name === \"twitter:card\");\n            const hasOgDescription = resolvedMeta.some((meta) => meta.property === \"og:description\");\n            entry[inputKey].meta = input.meta || [];\n            if (!hasOgTitle && (input.titleTemplate || input.title)) {\n              let newOgTitle = options?.ogTitle || titleTemplate || input.title;\n              if (typeof newOgTitle === \"function\")\n                newOgTitle = newOgTitle(title);\n              if (newOgTitle) {\n                entry[inputKey].meta.push({\n                  property: \"og:title\",\n                  // have the og:title be removed if we don't have a title\n                  content: String(newOgTitle)\n                });\n              }\n            }\n            if (description && !hasOgDescription) {\n              let newOgDescription = options?.ogDescription || description;\n              if (typeof newOgDescription === \"function\")\n                newOgDescription = newOgDescription(title);\n              if (newOgDescription) {\n                entry[inputKey].meta.push({\n                  property: \"og:description\",\n                  content: String(newOgDescription)\n                });\n              }\n            }\n            if (hasOgImage && !hasTwitterCard) {\n              entry[inputKey].meta.push({\n                name: \"twitter:card\",\n                content: options?.twitterCard || \"summary_large_image\"\n              });\n            }\n          }\n        }\n      }\n    }\n  });\n}\n\nconst DefaultCriticalTags = {\n  htmlAttrs: {\n    lang: \"en\"\n  },\n  meta: [\n    { charset: \"utf-8\" },\n    { name: \"viewport\", content: \"width=device-width, initial-scale=1\" }\n  ]\n};\n\nexport { DefaultCriticalTags, InferSeoMetaPlugin };\n"],
  "mappings": ";;;;;;;AAGA,SAAS,mBAAmB,UAAU,CAAC,GAAG;AACxC,SAAO,iBAAiB;AAAA,IACtB,OAAO;AAAA,MACL,SAAS;AAAA,QACP,QAAQ,EAAE,QAAQ,GAAG;AAP7B;AAQU,cAAI,gBAAgB;AACpB,qBAAW,SAAS,SAAS;AAC3B,kBAAM,WAAW,MAAM,gBAAgB,kBAAkB;AACzD,kBAAM,QAAQ,MAAM,QAAQ;AAC5B,gBAAI,OAAO,MAAM,kBAAkB;AACjC,8BAAgB,MAAM;AAAA,UAC1B;AACA,qBAAW,SAAS,SAAS;AAC3B,kBAAM,WAAW,MAAM,gBAAgB,kBAAkB;AACzD,kBAAM,QAAQ,MAAM,QAAQ;AAC5B,kBAAM,eAAe,MAAM,QAAQ,CAAC;AACpC,4BAAgB,qBAAqB,eAAe,MAAM,KAAK;AAC/D,kBAAM,QAAQ,MAAM;AACpB,kBAAM,eAAc,kBAAa,KAAK,CAAC,SAAS,KAAK,SAAS,aAAa,MAAvD,mBAA0D;AAC9E,kBAAM,aAAa,aAAa,KAAK,CAAC,SAAS,KAAK,aAAa,UAAU;AAC3E,kBAAM,aAAa,aAAa,KAAK,CAAC,SAAS,KAAK,aAAa,UAAU;AAC3E,kBAAM,iBAAiB,aAAa,KAAK,CAAC,SAAS,KAAK,SAAS,cAAc;AAC/E,kBAAM,mBAAmB,aAAa,KAAK,CAAC,SAAS,KAAK,aAAa,gBAAgB;AACvF,kBAAM,QAAQ,EAAE,OAAO,MAAM,QAAQ,CAAC;AACtC,gBAAI,CAAC,eAAe,MAAM,iBAAiB,MAAM,QAAQ;AACvD,kBAAI,cAAa,mCAAS,YAAW,iBAAiB,MAAM;AAC5D,kBAAI,OAAO,eAAe;AACxB,6BAAa,WAAW,KAAK;AAC/B,kBAAI,YAAY;AACd,sBAAM,QAAQ,EAAE,KAAK,KAAK;AAAA,kBACxB,UAAU;AAAA;AAAA,kBAEV,SAAS,OAAO,UAAU;AAAA,gBAC5B,CAAC;AAAA,cACH;AAAA,YACF;AACA,gBAAI,eAAe,CAAC,kBAAkB;AACpC,kBAAI,oBAAmB,mCAAS,kBAAiB;AACjD,kBAAI,OAAO,qBAAqB;AAC9B,mCAAmB,iBAAiB,KAAK;AAC3C,kBAAI,kBAAkB;AACpB,sBAAM,QAAQ,EAAE,KAAK,KAAK;AAAA,kBACxB,UAAU;AAAA,kBACV,SAAS,OAAO,gBAAgB;AAAA,gBAClC,CAAC;AAAA,cACH;AAAA,YACF;AACA,gBAAI,cAAc,CAAC,gBAAgB;AACjC,oBAAM,QAAQ,EAAE,KAAK,KAAK;AAAA,gBACxB,MAAM;AAAA,gBACN,UAAS,mCAAS,gBAAe;AAAA,cACnC,CAAC;AAAA,YACH;AAAA,UACF;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF,CAAC;AACH;AAEA,IAAM,sBAAsB;AAAA,EAC1B,WAAW;AAAA,IACT,MAAM;AAAA,EACR;AAAA,EACA,MAAM;AAAA,IACJ,EAAE,SAAS,QAAQ;AAAA,IACnB,EAAE,MAAM,YAAY,SAAS,sCAAsC;AAAA,EACrE;AACF;",
  "names": []
}
