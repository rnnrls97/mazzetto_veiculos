{
  "version": 3,
  "sources": ["../../mousetrap/mousetrap.js", "../../textarea-markdown-editor/dist/esm/bootstrap.js", "../../textarea-markdown-editor/dist/esm/utils.js", "../../textarea-markdown-editor/dist/esm/Cursor.new.js", "../../textarea-markdown-editor/dist/esm/handlers.js", "../../textarea-markdown-editor/dist/esm/commands.js", "../../textarea-markdown-editor/dist/esm/extensions.js", "../../textarea-markdown-editor/dist/esm/types.js"],
  "sourcesContent": ["/*global define:false */\n/**\n * Copyright 2012-2017 Craig Campbell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Mousetrap is a simple keyboard shortcut library for Javascript with\n * no external dependencies\n *\n * @version 1.6.5\n * @url craig.is/killing/mice\n */\n(function(window, document, undefined) {\n\n    // Check if mousetrap is used inside browser, if not, return\n    if (!window) {\n        return;\n    }\n\n    /**\n     * mapping of special keycodes to their corresponding keys\n     *\n     * everything in this dictionary cannot use keypress events\n     * so it has to be here to map to the correct keycodes for\n     * keyup/keydown events\n     *\n     * @type {Object}\n     */\n    var _MAP = {\n        8: 'backspace',\n        9: 'tab',\n        13: 'enter',\n        16: 'shift',\n        17: 'ctrl',\n        18: 'alt',\n        20: 'capslock',\n        27: 'esc',\n        32: 'space',\n        33: 'pageup',\n        34: 'pagedown',\n        35: 'end',\n        36: 'home',\n        37: 'left',\n        38: 'up',\n        39: 'right',\n        40: 'down',\n        45: 'ins',\n        46: 'del',\n        91: 'meta',\n        93: 'meta',\n        224: 'meta'\n    };\n\n    /**\n     * mapping for special characters so they can support\n     *\n     * this dictionary is only used incase you want to bind a\n     * keyup or keydown event to one of these keys\n     *\n     * @type {Object}\n     */\n    var _KEYCODE_MAP = {\n        106: '*',\n        107: '+',\n        109: '-',\n        110: '.',\n        111 : '/',\n        186: ';',\n        187: '=',\n        188: ',',\n        189: '-',\n        190: '.',\n        191: '/',\n        192: '`',\n        219: '[',\n        220: '\\\\',\n        221: ']',\n        222: '\\''\n    };\n\n    /**\n     * this is a mapping of keys that require shift on a US keypad\n     * back to the non shift equivelents\n     *\n     * this is so you can use keyup events with these keys\n     *\n     * note that this will only work reliably on US keyboards\n     *\n     * @type {Object}\n     */\n    var _SHIFT_MAP = {\n        '~': '`',\n        '!': '1',\n        '@': '2',\n        '#': '3',\n        '$': '4',\n        '%': '5',\n        '^': '6',\n        '&': '7',\n        '*': '8',\n        '(': '9',\n        ')': '0',\n        '_': '-',\n        '+': '=',\n        ':': ';',\n        '\\\"': '\\'',\n        '<': ',',\n        '>': '.',\n        '?': '/',\n        '|': '\\\\'\n    };\n\n    /**\n     * this is a list of special strings you can use to map\n     * to modifier keys when you specify your keyboard shortcuts\n     *\n     * @type {Object}\n     */\n    var _SPECIAL_ALIASES = {\n        'option': 'alt',\n        'command': 'meta',\n        'return': 'enter',\n        'escape': 'esc',\n        'plus': '+',\n        'mod': /Mac|iPod|iPhone|iPad/.test(navigator.platform) ? 'meta' : 'ctrl'\n    };\n\n    /**\n     * variable to store the flipped version of _MAP from above\n     * needed to check if we should use keypress or not when no action\n     * is specified\n     *\n     * @type {Object|undefined}\n     */\n    var _REVERSE_MAP;\n\n    /**\n     * loop through the f keys, f1 to f19 and add them to the map\n     * programatically\n     */\n    for (var i = 1; i < 20; ++i) {\n        _MAP[111 + i] = 'f' + i;\n    }\n\n    /**\n     * loop through to map numbers on the numeric keypad\n     */\n    for (i = 0; i <= 9; ++i) {\n\n        // This needs to use a string cause otherwise since 0 is falsey\n        // mousetrap will never fire for numpad 0 pressed as part of a keydown\n        // event.\n        //\n        // @see https://github.com/ccampbell/mousetrap/pull/258\n        _MAP[i + 96] = i.toString();\n    }\n\n    /**\n     * cross browser add event method\n     *\n     * @param {Element|HTMLDocument} object\n     * @param {string} type\n     * @param {Function} callback\n     * @returns void\n     */\n    function _addEvent(object, type, callback) {\n        if (object.addEventListener) {\n            object.addEventListener(type, callback, false);\n            return;\n        }\n\n        object.attachEvent('on' + type, callback);\n    }\n\n    /**\n     * takes the event and returns the key character\n     *\n     * @param {Event} e\n     * @return {string}\n     */\n    function _characterFromEvent(e) {\n\n        // for keypress events we should return the character as is\n        if (e.type == 'keypress') {\n            var character = String.fromCharCode(e.which);\n\n            // if the shift key is not pressed then it is safe to assume\n            // that we want the character to be lowercase.  this means if\n            // you accidentally have caps lock on then your key bindings\n            // will continue to work\n            //\n            // the only side effect that might not be desired is if you\n            // bind something like 'A' cause you want to trigger an\n            // event when capital A is pressed caps lock will no longer\n            // trigger the event.  shift+a will though.\n            if (!e.shiftKey) {\n                character = character.toLowerCase();\n            }\n\n            return character;\n        }\n\n        // for non keypress events the special maps are needed\n        if (_MAP[e.which]) {\n            return _MAP[e.which];\n        }\n\n        if (_KEYCODE_MAP[e.which]) {\n            return _KEYCODE_MAP[e.which];\n        }\n\n        // if it is not in the special map\n\n        // with keydown and keyup events the character seems to always\n        // come in as an uppercase character whether you are pressing shift\n        // or not.  we should make sure it is always lowercase for comparisons\n        return String.fromCharCode(e.which).toLowerCase();\n    }\n\n    /**\n     * checks if two arrays are equal\n     *\n     * @param {Array} modifiers1\n     * @param {Array} modifiers2\n     * @returns {boolean}\n     */\n    function _modifiersMatch(modifiers1, modifiers2) {\n        return modifiers1.sort().join(',') === modifiers2.sort().join(',');\n    }\n\n    /**\n     * takes a key event and figures out what the modifiers are\n     *\n     * @param {Event} e\n     * @returns {Array}\n     */\n    function _eventModifiers(e) {\n        var modifiers = [];\n\n        if (e.shiftKey) {\n            modifiers.push('shift');\n        }\n\n        if (e.altKey) {\n            modifiers.push('alt');\n        }\n\n        if (e.ctrlKey) {\n            modifiers.push('ctrl');\n        }\n\n        if (e.metaKey) {\n            modifiers.push('meta');\n        }\n\n        return modifiers;\n    }\n\n    /**\n     * prevents default for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _preventDefault(e) {\n        if (e.preventDefault) {\n            e.preventDefault();\n            return;\n        }\n\n        e.returnValue = false;\n    }\n\n    /**\n     * stops propogation for this event\n     *\n     * @param {Event} e\n     * @returns void\n     */\n    function _stopPropagation(e) {\n        if (e.stopPropagation) {\n            e.stopPropagation();\n            return;\n        }\n\n        e.cancelBubble = true;\n    }\n\n    /**\n     * determines if the keycode specified is a modifier key or not\n     *\n     * @param {string} key\n     * @returns {boolean}\n     */\n    function _isModifier(key) {\n        return key == 'shift' || key == 'ctrl' || key == 'alt' || key == 'meta';\n    }\n\n    /**\n     * reverses the map lookup so that we can look for specific keys\n     * to see what can and can't use keypress\n     *\n     * @return {Object}\n     */\n    function _getReverseMap() {\n        if (!_REVERSE_MAP) {\n            _REVERSE_MAP = {};\n            for (var key in _MAP) {\n\n                // pull out the numeric keypad from here cause keypress should\n                // be able to detect the keys from the character\n                if (key > 95 && key < 112) {\n                    continue;\n                }\n\n                if (_MAP.hasOwnProperty(key)) {\n                    _REVERSE_MAP[_MAP[key]] = key;\n                }\n            }\n        }\n        return _REVERSE_MAP;\n    }\n\n    /**\n     * picks the best action based on the key combination\n     *\n     * @param {string} key - character for key\n     * @param {Array} modifiers\n     * @param {string=} action passed in\n     */\n    function _pickBestAction(key, modifiers, action) {\n\n        // if no action was picked in we should try to pick the one\n        // that we think would work best for this key\n        if (!action) {\n            action = _getReverseMap()[key] ? 'keydown' : 'keypress';\n        }\n\n        // modifier keys don't work as expected with keypress,\n        // switch to keydown\n        if (action == 'keypress' && modifiers.length) {\n            action = 'keydown';\n        }\n\n        return action;\n    }\n\n    /**\n     * Converts from a string key combination to an array\n     *\n     * @param  {string} combination like \"command+shift+l\"\n     * @return {Array}\n     */\n    function _keysFromString(combination) {\n        if (combination === '+') {\n            return ['+'];\n        }\n\n        combination = combination.replace(/\\+{2}/g, '+plus');\n        return combination.split('+');\n    }\n\n    /**\n     * Gets info for a specific key combination\n     *\n     * @param  {string} combination key combination (\"command+s\" or \"a\" or \"*\")\n     * @param  {string=} action\n     * @returns {Object}\n     */\n    function _getKeyInfo(combination, action) {\n        var keys;\n        var key;\n        var i;\n        var modifiers = [];\n\n        // take the keys from this pattern and figure out what the actual\n        // pattern is all about\n        keys = _keysFromString(combination);\n\n        for (i = 0; i < keys.length; ++i) {\n            key = keys[i];\n\n            // normalize key names\n            if (_SPECIAL_ALIASES[key]) {\n                key = _SPECIAL_ALIASES[key];\n            }\n\n            // if this is not a keypress event then we should\n            // be smart about using shift keys\n            // this will only work for US keyboards however\n            if (action && action != 'keypress' && _SHIFT_MAP[key]) {\n                key = _SHIFT_MAP[key];\n                modifiers.push('shift');\n            }\n\n            // if this key is a modifier then add it to the list of modifiers\n            if (_isModifier(key)) {\n                modifiers.push(key);\n            }\n        }\n\n        // depending on what the key combination is\n        // we will try to pick the best event for it\n        action = _pickBestAction(key, modifiers, action);\n\n        return {\n            key: key,\n            modifiers: modifiers,\n            action: action\n        };\n    }\n\n    function _belongsTo(element, ancestor) {\n        if (element === null || element === document) {\n            return false;\n        }\n\n        if (element === ancestor) {\n            return true;\n        }\n\n        return _belongsTo(element.parentNode, ancestor);\n    }\n\n    function Mousetrap(targetElement) {\n        var self = this;\n\n        targetElement = targetElement || document;\n\n        if (!(self instanceof Mousetrap)) {\n            return new Mousetrap(targetElement);\n        }\n\n        /**\n         * element to attach key events to\n         *\n         * @type {Element}\n         */\n        self.target = targetElement;\n\n        /**\n         * a list of all the callbacks setup via Mousetrap.bind()\n         *\n         * @type {Object}\n         */\n        self._callbacks = {};\n\n        /**\n         * direct map of string combinations to callbacks used for trigger()\n         *\n         * @type {Object}\n         */\n        self._directMap = {};\n\n        /**\n         * keeps track of what level each sequence is at since multiple\n         * sequences can start out with the same sequence\n         *\n         * @type {Object}\n         */\n        var _sequenceLevels = {};\n\n        /**\n         * variable to store the setTimeout call\n         *\n         * @type {null|number}\n         */\n        var _resetTimer;\n\n        /**\n         * temporary state where we will ignore the next keyup\n         *\n         * @type {boolean|string}\n         */\n        var _ignoreNextKeyup = false;\n\n        /**\n         * temporary state where we will ignore the next keypress\n         *\n         * @type {boolean}\n         */\n        var _ignoreNextKeypress = false;\n\n        /**\n         * are we currently inside of a sequence?\n         * type of action (\"keyup\" or \"keydown\" or \"keypress\") or false\n         *\n         * @type {boolean|string}\n         */\n        var _nextExpectedAction = false;\n\n        /**\n         * resets all sequence counters except for the ones passed in\n         *\n         * @param {Object} doNotReset\n         * @returns void\n         */\n        function _resetSequences(doNotReset) {\n            doNotReset = doNotReset || {};\n\n            var activeSequences = false,\n                key;\n\n            for (key in _sequenceLevels) {\n                if (doNotReset[key]) {\n                    activeSequences = true;\n                    continue;\n                }\n                _sequenceLevels[key] = 0;\n            }\n\n            if (!activeSequences) {\n                _nextExpectedAction = false;\n            }\n        }\n\n        /**\n         * finds all callbacks that match based on the keycode, modifiers,\n         * and action\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event|Object} e\n         * @param {string=} sequenceName - name of the sequence we are looking for\n         * @param {string=} combination\n         * @param {number=} level\n         * @returns {Array}\n         */\n        function _getMatches(character, modifiers, e, sequenceName, combination, level) {\n            var i;\n            var callback;\n            var matches = [];\n            var action = e.type;\n\n            // if there are no events related to this keycode\n            if (!self._callbacks[character]) {\n                return [];\n            }\n\n            // if a modifier key is coming up on its own we should allow it\n            if (action == 'keyup' && _isModifier(character)) {\n                modifiers = [character];\n            }\n\n            // loop through all callbacks for the key that was pressed\n            // and see if any of them match\n            for (i = 0; i < self._callbacks[character].length; ++i) {\n                callback = self._callbacks[character][i];\n\n                // if a sequence name is not specified, but this is a sequence at\n                // the wrong level then move onto the next match\n                if (!sequenceName && callback.seq && _sequenceLevels[callback.seq] != callback.level) {\n                    continue;\n                }\n\n                // if the action we are looking for doesn't match the action we got\n                // then we should keep going\n                if (action != callback.action) {\n                    continue;\n                }\n\n                // if this is a keypress event and the meta key and control key\n                // are not pressed that means that we need to only look at the\n                // character, otherwise check the modifiers as well\n                //\n                // chrome will not fire a keypress if meta or control is down\n                // safari will fire a keypress if meta or meta+shift is down\n                // firefox will fire a keypress if meta or control is down\n                if ((action == 'keypress' && !e.metaKey && !e.ctrlKey) || _modifiersMatch(modifiers, callback.modifiers)) {\n\n                    // when you bind a combination or sequence a second time it\n                    // should overwrite the first one.  if a sequenceName or\n                    // combination is specified in this call it does just that\n                    //\n                    // @todo make deleting its own method?\n                    var deleteCombo = !sequenceName && callback.combo == combination;\n                    var deleteSequence = sequenceName && callback.seq == sequenceName && callback.level == level;\n                    if (deleteCombo || deleteSequence) {\n                        self._callbacks[character].splice(i, 1);\n                    }\n\n                    matches.push(callback);\n                }\n            }\n\n            return matches;\n        }\n\n        /**\n         * actually calls the callback function\n         *\n         * if your callback function returns false this will use the jquery\n         * convention - prevent default and stop propogation on the event\n         *\n         * @param {Function} callback\n         * @param {Event} e\n         * @returns void\n         */\n        function _fireCallback(callback, e, combo, sequence) {\n\n            // if this event should not happen stop here\n            if (self.stopCallback(e, e.target || e.srcElement, combo, sequence)) {\n                return;\n            }\n\n            if (callback(e, combo) === false) {\n                _preventDefault(e);\n                _stopPropagation(e);\n            }\n        }\n\n        /**\n         * handles a character key event\n         *\n         * @param {string} character\n         * @param {Array} modifiers\n         * @param {Event} e\n         * @returns void\n         */\n        self._handleKey = function(character, modifiers, e) {\n            var callbacks = _getMatches(character, modifiers, e);\n            var i;\n            var doNotReset = {};\n            var maxLevel = 0;\n            var processedSequenceCallback = false;\n\n            // Calculate the maxLevel for sequences so we can only execute the longest callback sequence\n            for (i = 0; i < callbacks.length; ++i) {\n                if (callbacks[i].seq) {\n                    maxLevel = Math.max(maxLevel, callbacks[i].level);\n                }\n            }\n\n            // loop through matching callbacks for this key event\n            for (i = 0; i < callbacks.length; ++i) {\n\n                // fire for all sequence callbacks\n                // this is because if for example you have multiple sequences\n                // bound such as \"g i\" and \"g t\" they both need to fire the\n                // callback for matching g cause otherwise you can only ever\n                // match the first one\n                if (callbacks[i].seq) {\n\n                    // only fire callbacks for the maxLevel to prevent\n                    // subsequences from also firing\n                    //\n                    // for example 'a option b' should not cause 'option b' to fire\n                    // even though 'option b' is part of the other sequence\n                    //\n                    // any sequences that do not match here will be discarded\n                    // below by the _resetSequences call\n                    if (callbacks[i].level != maxLevel) {\n                        continue;\n                    }\n\n                    processedSequenceCallback = true;\n\n                    // keep a list of which sequences were matches for later\n                    doNotReset[callbacks[i].seq] = 1;\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo, callbacks[i].seq);\n                    continue;\n                }\n\n                // if there were no sequence matches but we are still here\n                // that means this is a regular match so we should fire that\n                if (!processedSequenceCallback) {\n                    _fireCallback(callbacks[i].callback, e, callbacks[i].combo);\n                }\n            }\n\n            // if the key you pressed matches the type of sequence without\n            // being a modifier (ie \"keyup\" or \"keypress\") then we should\n            // reset all sequences that were not matched by this event\n            //\n            // this is so, for example, if you have the sequence \"h a t\" and you\n            // type \"h e a r t\" it does not match.  in this case the \"e\" will\n            // cause the sequence to reset\n            //\n            // modifier keys are ignored because you can have a sequence\n            // that contains modifiers such as \"enter ctrl+space\" and in most\n            // cases the modifier key will be pressed before the next key\n            //\n            // also if you have a sequence such as \"ctrl+b a\" then pressing the\n            // \"b\" key will trigger a \"keypress\" and a \"keydown\"\n            //\n            // the \"keydown\" is expected when there is a modifier, but the\n            // \"keypress\" ends up matching the _nextExpectedAction since it occurs\n            // after and that causes the sequence to reset\n            //\n            // we ignore keypresses in a sequence that directly follow a keydown\n            // for the same character\n            var ignoreThisKeypress = e.type == 'keypress' && _ignoreNextKeypress;\n            if (e.type == _nextExpectedAction && !_isModifier(character) && !ignoreThisKeypress) {\n                _resetSequences(doNotReset);\n            }\n\n            _ignoreNextKeypress = processedSequenceCallback && e.type == 'keydown';\n        };\n\n        /**\n         * handles a keydown event\n         *\n         * @param {Event} e\n         * @returns void\n         */\n        function _handleKeyEvent(e) {\n\n            // normalize e.which for key events\n            // @see http://stackoverflow.com/questions/4285627/javascript-keycode-vs-charcode-utter-confusion\n            if (typeof e.which !== 'number') {\n                e.which = e.keyCode;\n            }\n\n            var character = _characterFromEvent(e);\n\n            // no character found then stop\n            if (!character) {\n                return;\n            }\n\n            // need to use === for the character check because the character can be 0\n            if (e.type == 'keyup' && _ignoreNextKeyup === character) {\n                _ignoreNextKeyup = false;\n                return;\n            }\n\n            self.handleKey(character, _eventModifiers(e), e);\n        }\n\n        /**\n         * called to set a 1 second timeout on the specified sequence\n         *\n         * this is so after each key press in the sequence you have 1 second\n         * to press the next key before you have to start over\n         *\n         * @returns void\n         */\n        function _resetSequenceTimer() {\n            clearTimeout(_resetTimer);\n            _resetTimer = setTimeout(_resetSequences, 1000);\n        }\n\n        /**\n         * binds a key sequence to an event\n         *\n         * @param {string} combo - combo specified in bind call\n         * @param {Array} keys\n         * @param {Function} callback\n         * @param {string=} action\n         * @returns void\n         */\n        function _bindSequence(combo, keys, callback, action) {\n\n            // start off by adding a sequence level record for this combination\n            // and setting the level to 0\n            _sequenceLevels[combo] = 0;\n\n            /**\n             * callback to increase the sequence level for this sequence and reset\n             * all other sequences that were active\n             *\n             * @param {string} nextAction\n             * @returns {Function}\n             */\n            function _increaseSequence(nextAction) {\n                return function() {\n                    _nextExpectedAction = nextAction;\n                    ++_sequenceLevels[combo];\n                    _resetSequenceTimer();\n                };\n            }\n\n            /**\n             * wraps the specified callback inside of another function in order\n             * to reset all sequence counters as soon as this sequence is done\n             *\n             * @param {Event} e\n             * @returns void\n             */\n            function _callbackAndReset(e) {\n                _fireCallback(callback, e, combo);\n\n                // we should ignore the next key up if the action is key down\n                // or keypress.  this is so if you finish a sequence and\n                // release the key the final key will not trigger a keyup\n                if (action !== 'keyup') {\n                    _ignoreNextKeyup = _characterFromEvent(e);\n                }\n\n                // weird race condition if a sequence ends with the key\n                // another sequence begins with\n                setTimeout(_resetSequences, 10);\n            }\n\n            // loop through keys one at a time and bind the appropriate callback\n            // function.  for any key leading up to the final one it should\n            // increase the sequence. after the final, it should reset all sequences\n            //\n            // if an action is specified in the original bind call then that will\n            // be used throughout.  otherwise we will pass the action that the\n            // next key in the sequence should match.  this allows a sequence\n            // to mix and match keypress and keydown events depending on which\n            // ones are better suited to the key provided\n            for (var i = 0; i < keys.length; ++i) {\n                var isFinal = i + 1 === keys.length;\n                var wrappedCallback = isFinal ? _callbackAndReset : _increaseSequence(action || _getKeyInfo(keys[i + 1]).action);\n                _bindSingle(keys[i], wrappedCallback, action, combo, i);\n            }\n        }\n\n        /**\n         * binds a single keyboard combination\n         *\n         * @param {string} combination\n         * @param {Function} callback\n         * @param {string=} action\n         * @param {string=} sequenceName - name of sequence if part of sequence\n         * @param {number=} level - what part of the sequence the command is\n         * @returns void\n         */\n        function _bindSingle(combination, callback, action, sequenceName, level) {\n\n            // store a direct mapped reference for use with Mousetrap.trigger\n            self._directMap[combination + ':' + action] = callback;\n\n            // make sure multiple spaces in a row become a single space\n            combination = combination.replace(/\\s+/g, ' ');\n\n            var sequence = combination.split(' ');\n            var info;\n\n            // if this pattern is a sequence of keys then run through this method\n            // to reprocess each pattern one key at a time\n            if (sequence.length > 1) {\n                _bindSequence(combination, sequence, callback, action);\n                return;\n            }\n\n            info = _getKeyInfo(combination, action);\n\n            // make sure to initialize array if this is the first time\n            // a callback is added for this key\n            self._callbacks[info.key] = self._callbacks[info.key] || [];\n\n            // remove an existing match if there is one\n            _getMatches(info.key, info.modifiers, {type: info.action}, sequenceName, combination, level);\n\n            // add this call back to the array\n            // if it is a sequence put it at the beginning\n            // if not put it at the end\n            //\n            // this is important because the way these are processed expects\n            // the sequence ones to come first\n            self._callbacks[info.key][sequenceName ? 'unshift' : 'push']({\n                callback: callback,\n                modifiers: info.modifiers,\n                action: info.action,\n                seq: sequenceName,\n                level: level,\n                combo: combination\n            });\n        }\n\n        /**\n         * binds multiple combinations to the same callback\n         *\n         * @param {Array} combinations\n         * @param {Function} callback\n         * @param {string|undefined} action\n         * @returns void\n         */\n        self._bindMultiple = function(combinations, callback, action) {\n            for (var i = 0; i < combinations.length; ++i) {\n                _bindSingle(combinations[i], callback, action);\n            }\n        };\n\n        // start!\n        _addEvent(targetElement, 'keypress', _handleKeyEvent);\n        _addEvent(targetElement, 'keydown', _handleKeyEvent);\n        _addEvent(targetElement, 'keyup', _handleKeyEvent);\n    }\n\n    /**\n     * binds an event to mousetrap\n     *\n     * can be a single key, a combination of keys separated with +,\n     * an array of keys, or a sequence of keys separated by spaces\n     *\n     * be sure to list the modifier keys first to make sure that the\n     * correct key ends up getting bound (the last key in the pattern)\n     *\n     * @param {string|Array} keys\n     * @param {Function} callback\n     * @param {string=} action - 'keypress', 'keydown', or 'keyup'\n     * @returns void\n     */\n    Mousetrap.prototype.bind = function(keys, callback, action) {\n        var self = this;\n        keys = keys instanceof Array ? keys : [keys];\n        self._bindMultiple.call(self, keys, callback, action);\n        return self;\n    };\n\n    /**\n     * unbinds an event to mousetrap\n     *\n     * the unbinding sets the callback function of the specified key combo\n     * to an empty function and deletes the corresponding key in the\n     * _directMap dict.\n     *\n     * TODO: actually remove this from the _callbacks dictionary instead\n     * of binding an empty function\n     *\n     * the keycombo+action has to be exactly the same as\n     * it was defined in the bind method\n     *\n     * @param {string|Array} keys\n     * @param {string} action\n     * @returns void\n     */\n    Mousetrap.prototype.unbind = function(keys, action) {\n        var self = this;\n        return self.bind.call(self, keys, function() {}, action);\n    };\n\n    /**\n     * triggers an event that has already been bound\n     *\n     * @param {string} keys\n     * @param {string=} action\n     * @returns void\n     */\n    Mousetrap.prototype.trigger = function(keys, action) {\n        var self = this;\n        if (self._directMap[keys + ':' + action]) {\n            self._directMap[keys + ':' + action]({}, keys);\n        }\n        return self;\n    };\n\n    /**\n     * resets the library back to its initial state.  this is useful\n     * if you want to clear out the current keyboard shortcuts and bind\n     * new ones - for example if you switch to another page\n     *\n     * @returns void\n     */\n    Mousetrap.prototype.reset = function() {\n        var self = this;\n        self._callbacks = {};\n        self._directMap = {};\n        return self;\n    };\n\n    /**\n     * should we stop this event before firing off callbacks\n     *\n     * @param {Event} e\n     * @param {Element} element\n     * @return {boolean}\n     */\n    Mousetrap.prototype.stopCallback = function(e, element) {\n        var self = this;\n\n        // if the element has the class \"mousetrap\" then no need to stop\n        if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n            return false;\n        }\n\n        if (_belongsTo(element, self.target)) {\n            return false;\n        }\n\n        // Events originating from a shadow DOM are re-targetted and `e.target` is the shadow host,\n        // not the initial event target in the shadow tree. Note that not all events cross the\n        // shadow boundary.\n        // For shadow trees with `mode: 'open'`, the initial event target is the first element in\n        // the event’s composed path. For shadow trees with `mode: 'closed'`, the initial event\n        // target cannot be obtained.\n        if ('composedPath' in e && typeof e.composedPath === 'function') {\n            // For open shadow trees, update `element` so that the following check works.\n            var initialEventTarget = e.composedPath()[0];\n            if (initialEventTarget !== e.target) {\n                element = initialEventTarget;\n            }\n        }\n\n        // stop for input, select, and textarea\n        return element.tagName == 'INPUT' || element.tagName == 'SELECT' || element.tagName == 'TEXTAREA' || element.isContentEditable;\n    };\n\n    /**\n     * exposes _handleKey publicly so it can be overwritten by extensions\n     */\n    Mousetrap.prototype.handleKey = function() {\n        var self = this;\n        return self._handleKey.apply(self, arguments);\n    };\n\n    /**\n     * allow custom key mappings\n     */\n    Mousetrap.addKeycodes = function(object) {\n        for (var key in object) {\n            if (object.hasOwnProperty(key)) {\n                _MAP[key] = object[key];\n            }\n        }\n        _REVERSE_MAP = null;\n    };\n\n    /**\n     * Init the global mousetrap functions\n     *\n     * This method is needed to allow the global mousetrap functions to work\n     * now that mousetrap is a constructor function.\n     */\n    Mousetrap.init = function() {\n        var documentMousetrap = Mousetrap(document);\n        for (var method in documentMousetrap) {\n            if (method.charAt(0) !== '_') {\n                Mousetrap[method] = (function(method) {\n                    return function() {\n                        return documentMousetrap[method].apply(documentMousetrap, arguments);\n                    };\n                } (method));\n            }\n        }\n    };\n\n    Mousetrap.init();\n\n    // expose mousetrap to the global object\n    window.Mousetrap = Mousetrap;\n\n    // expose as a common js module\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = Mousetrap;\n    }\n\n    // expose mousetrap as an AMD module\n    if (typeof define === 'function' && define.amd) {\n        define(function() {\n            return Mousetrap;\n        });\n    }\n}) (typeof window !== 'undefined' ? window : null, typeof  window !== 'undefined' ? document : null);\n", "var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport Mousetrap from 'mousetrap';\nimport { buildInCommands } from './commands';\nimport { Cursor } from './Cursor.new';\nimport { properLineRemoveBehaviorExtension, indentExtension, linkPasteExtension, prefixWrappingExtension, orderedListAutoCorrectExtension, } from './extensions';\nimport { defaultTextareaMarkdownOptions, BUILT_IN_COMMANDS, } from './types';\nimport { findLast } from './utils';\nexport var bootstrapTextareaMarkdown = function (textarea, config) {\n    if (config === void 0) { config = {}; }\n    var cursor = new Cursor(textarea);\n    var mousetrap = new Mousetrap(textarea);\n    var commands = mergedCommandsList(config.commands);\n    var options = __assign(__assign({}, defaultTextareaMarkdownOptions), config.options);\n    var trigger = function (name) {\n        var args = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            args[_i - 1] = arguments[_i];\n        }\n        var command = findLast(commands, function (c) { return c.name === name; });\n        var keyEvent = isKeyboardArg(args[0]) ? args[0].keyEvent : undefined;\n        var handlerArgs = isKeyboardArg(args[0]) ? [] : args;\n        if (!command) {\n            throw new TypeError(\"Command with name \\\"\".concat(name, \"\\\" is not defined\"));\n        }\n        // ! disabled only if `false`\n        if (command.enable === false) {\n            return;\n        }\n        textarea.focus();\n        command.handler.apply(command, __spreadArray([{ textarea: textarea, keyEvent: keyEvent, options: options, cursor: cursor }], (handlerArgs !== null && handlerArgs !== void 0 ? handlerArgs : []), false));\n    };\n    // subscribe on shortcuts\n    commands.forEach(function (command) {\n        if (command.shortcut) {\n            mousetrap.bind(command.shortcut, function (keyEvent) {\n                if (command.shortcutPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n                trigger(command.name, { __keyboard: true, keyEvent: keyEvent });\n            });\n        }\n    });\n    // bootstrap extensions if enabled, extension can optionally returns a cleanup function, which will be called inside dispose\n    var extensions = [\n        // fixUndoBehaviorExtension(textarea, options),\n        options.enableIndentExtension && indentExtension(textarea, options),\n        options.enableLinkPasteExtension && linkPasteExtension(textarea, options),\n        options.enablePrefixWrappingExtension && prefixWrappingExtension(textarea, options),\n        options.enableProperLineRemoveBehaviorExtension && properLineRemoveBehaviorExtension(textarea, options),\n        options.enableOrderedListAutoCorrectExtension && orderedListAutoCorrectExtension(textarea, options),\n    ];\n    // unsubscribe from all listeners\n    var dispose = function () {\n        mousetrap.reset();\n        extensions.forEach(function (cleanupExtension) { return cleanupExtension instanceof Function && cleanupExtension(); });\n    };\n    return {\n        trigger: trigger,\n        dispose: dispose,\n        cursor: cursor,\n    };\n};\nvar isKeyboardArg = function (arg) {\n    return arg !== null && typeof arg === 'object' && arg.__keyboard === true;\n};\nvar mergedCommandsList = function (customCommands) {\n    if (customCommands === void 0) { customCommands = []; }\n    var commands = __spreadArray([], buildInCommands, true);\n    customCommands === null || customCommands === void 0 ? void 0 : customCommands.forEach(function (command) {\n        if (BUILT_IN_COMMANDS.includes(command.name)) {\n            var commandIndex = buildInCommands.findIndex(function (x) { return x.name === command.name; });\n            var overrides = {\n                name: commands[commandIndex].name,\n                handler: commands[commandIndex].handler,\n                enable: command.enable,\n                shortcut: command.shortcut,\n            };\n            commands[commandIndex] = overrides;\n        }\n        else {\n            if (!command.handler || !(command.handler instanceof Function)) {\n                throw new TypeError('Custom command should have a handler function');\n            }\n            commands.push(command);\n        }\n    });\n    return commands;\n};\n", "export var metaCombination = function () {\n    var keys = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        keys[_i] = arguments[_i];\n    }\n    return [\"command+\".concat(keys.join('+')), \"ctrl+\".concat(keys.join('+'))];\n};\nexport var clamp = function (val, min, max) { return Math.min(Math.max(min, val), max); };\nexport var findLast = function (array, predicate) {\n    var curIndex = array.length;\n    while (curIndex--) {\n        if (predicate(array[curIndex], curIndex, array))\n            return array[curIndex];\n    }\n    return undefined;\n};\nexport var trimChars = function (text, chars) {\n    return text.replace(new RegExp('^[' + escapeRegExp(chars) + ']+|[' + chars + ']+$', 'g'), '');\n};\nexport var isBtwOrEq = function (value, a, b) {\n    return value >= Math.min(a, b) && value <= Math.max(a, b);\n};\nvar browserSupportsTextareaTextNodes;\nfunction canManipulateViaTextNodes(input) {\n    if (input.nodeName !== 'TEXTAREA') {\n        return false;\n    }\n    if (typeof browserSupportsTextareaTextNodes === 'undefined') {\n        var textarea = document.createElement('textarea');\n        textarea.value = '1';\n        browserSupportsTextareaTextNodes = Boolean(textarea.firstChild);\n    }\n    return browserSupportsTextareaTextNodes;\n}\n/**\n * @param {HTMLTextAreaElement|HTMLInputElement} input\n * @param {string} value\n * @returns {void}\n */\nexport function fireInput(input, value) {\n    // clear value before insertion\n    // Most of the used APIs only work with the field selected\n    input.focus();\n    // since we replace all content\n    input.select();\n    // Webkit + Edge\n    var isSuccess = document.execCommand && document.execCommand('insertText', false, value);\n    input.selectionStart = input.value.length;\n    if (!isSuccess) {\n        var start = input.selectionStart;\n        var end = input.selectionEnd;\n        // Firefox (non-standard method)\n        if (typeof input.setRangeText === 'function') {\n            input.setRangeText(value);\n        }\n        else {\n            //\n            // To make a change we just need a Range, not a Selection\n            var range = document.createRange();\n            var textNode = document.createTextNode(value);\n            if (canManipulateViaTextNodes(input)) {\n                var node = input.firstChild;\n                // If textarea is empty, just insert the text\n                if (!node) {\n                    input.appendChild(textNode);\n                }\n                else {\n                    // Otherwise we need to find a nodes for start and end\n                    var offset = 0;\n                    var startNode = null;\n                    var endNode = null;\n                    while (node && (startNode === null || endNode === null)) {\n                        var nodeLength = node.nodeValue.length;\n                        // if start of the selection falls into current node\n                        if (start >= offset && start <= offset + nodeLength) {\n                            range.setStart((startNode = node), start - offset);\n                        }\n                        // if end of the selection falls into current node\n                        if (end >= offset && end <= offset + nodeLength) {\n                            range.setEnd((endNode = node), end - offset);\n                        }\n                        offset += nodeLength;\n                        node = node.nextSibling;\n                    }\n                    // If there is some text selected, remove it as we should replace it\n                    if (start !== end) {\n                        range.deleteContents();\n                    }\n                }\n            }\n            // If the node is a textarea and the range doesn't span outside the element\n            //\n            // Get the commonAncestorContainer of the selected range and test its type\n            // If the node is of type `#text` it means that we're still working with text nodes within our textarea element\n            // otherwise, if it's of type `#document` for example it means our selection spans outside the textarea.\n            if (canManipulateViaTextNodes(input) && range.commonAncestorContainer.nodeName === '#text') {\n                // Finally insert a new node. The browser will automatically split start and end nodes into two if necessary\n                range.insertNode(textNode);\n            }\n            else {\n                // If the node is not a textarea or the range spans outside a textarea the only way is to replace the whole value\n                input.value = value;\n            }\n        }\n        // Notify any possible listeners of the change\n        var e = document.createEvent('UIEvent');\n        e.initEvent('input', true, false);\n        input.dispatchEvent(e);\n    }\n}\n/**\n * 1. -> 2.\n * 1.1. -> 1.2.\n */\nexport var getIncrementedOrderedListPrefix = function (prefix) {\n    var parts = trimChars(prefix.trim(), '.').split('.');\n    var currentCount = parseInt(parts[parts.length - 1]);\n    if (parts.length === 1) {\n        return \"\".concat(currentCount + 1, \".\");\n    }\n    return \"\".concat(parts.slice(0, -1).join('.'), \".\").concat(currentCount + 1, \".\");\n};\nexport var isRefObject = function (ref) {\n    return ref !== null && typeof ref === 'object';\n};\n/** Will try to find textarea or throws an Error  */\nexport var findTextArea = function (element) {\n    var CHILDREN_ERROR_MSG = 'TextareaMarkdown wrapper: child element must be instance of HTMLTextAreaElement or container with an textarea element';\n    if (!element) {\n        throw new TypeError(CHILDREN_ERROR_MSG);\n    }\n    if (element instanceof HTMLTextAreaElement) {\n        return element;\n    }\n    var queried = element.querySelector('textarea');\n    if (queried instanceof HTMLTextAreaElement) {\n        return queried;\n    }\n    throw new TypeError(CHILDREN_ERROR_MSG);\n};\nexport function escapeRegExp(str) {\n    return str.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'); // $& means the whole matched string\n}\nexport var isURL = function (value) {\n    try {\n        return typeof value === 'string' && Boolean(new URL(value));\n    }\n    catch (error) {\n        return false;\n    }\n};\nexport var isImageURL = function (value) {\n    return isURL(value) && value.match(/\\.(jpeg|jpg|gif|png)$/) !== null;\n};\nvar HistoryStack = /** @class */ (function () {\n    function HistoryStack(limit) {\n        this.limit = limit;\n        this.items = [];\n    }\n    HistoryStack.prototype.push = function (item) {\n        this.items.push(item);\n        if (this.items.length >= this.limit) {\n            this.items.splice(0, 1);\n        }\n    };\n    HistoryStack.prototype.peek = function (n) {\n        return this.items[this.items.length - n];\n    };\n    HistoryStack.prototype.pop = function () {\n        return this.items.pop();\n    };\n    return HistoryStack;\n}());\nexport { HistoryStack };\n", "import { isBtwOrEq, fireInput } from './utils';\nvar MARKER = \"\\0\";\n/**\n * Util for manipulation with textarea content and text selection\n */\nvar Cursor = /** @class */ (function () {\n    function Cursor(element) {\n        this.element = element;\n        this.MARKER = MARKER;\n    }\n    Object.defineProperty(Cursor.prototype, \"value\", {\n        get: function () {\n            return this.element.value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Cursor.prototype, \"lines\", {\n        /** @returns {Line[]} information about each line of text */\n        get: function () {\n            var currentLength = 0;\n            return this.value.split('\\n').reduce(function (lines, content, index, arr) {\n                var lineNumber = index + 1;\n                var isLastLine = index === arr.length - 1;\n                var lineLength = content.length + Number(!isLastLine);\n                var startsAt = currentLength;\n                var endsAt = startsAt + lineLength - Number(!isLastLine);\n                currentLength += lineLength;\n                lines.push({\n                    text: content,\n                    lineNumber: lineNumber,\n                    startsAt: startsAt,\n                    endsAt: endsAt,\n                });\n                return lines;\n            }, []);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Cursor.prototype, \"selection\", {\n        /** @returns {Selection} information about current selection */\n        get: function () {\n            var selectionStart = this.element.selectionStart;\n            var selectionEnd = this.element.selectionEnd;\n            var selectionDirection = this.element.selectionDirection;\n            var text = this.value.slice(selectionStart, selectionEnd);\n            var lines = this.lines.filter(function (line) {\n                // selection starts inside a line\n                return isBtwOrEq(selectionStart, line.startsAt, line.endsAt) ||\n                    // selection ends inside a line\n                    isBtwOrEq(selectionEnd, line.startsAt, line.endsAt) ||\n                    // line inside selection from left\n                    isBtwOrEq(line.startsAt, selectionStart, selectionEnd) ||\n                    // line inside selection from right\n                    isBtwOrEq(line.endsAt, selectionStart, selectionEnd);\n            });\n            if (selectionStart === selectionEnd) {\n                return null;\n            }\n            return { lines: lines, selectionStart: selectionStart, selectionEnd: selectionEnd, selectionDirection: selectionDirection, text: text };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Cursor.prototype, \"position\", {\n        /** @returns {Position} information about current position */\n        get: function () {\n            var position = this.element.selectionStart;\n            var line = this.lines.find(function (line) { return position >= line.startsAt && position <= line.endsAt; });\n            return { cursorAt: position, line: line };\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Cursor.prototype.setValue = function (text) {\n        var data = this.execRaw(text);\n        // TODO check if there are other way to make it work\n        if (process.env.NODE_ENV === 'test') {\n            this.element.value = data.text;\n        }\n        else {\n            fireInput(this.element, data.text);\n        }\n        if (data.selectionStart === null && data.selectionEnd === null) {\n            return;\n        }\n        // if no end of selection or start == end\n        if (data.selectionStart !== null && (data.selectionEnd === null || data.selectionStart === data.selectionEnd)) {\n            this.element.selectionStart = data.selectionStart;\n            this.element.selectionEnd = data.selectionStart;\n        }\n        else {\n            this.element.setSelectionRange(data.selectionStart, data.selectionEnd);\n        }\n    };\n    /**\n     * @returns {Line} information about line\n     * */\n    Cursor.prototype.lineAt = function (lineNumber) {\n        var _a;\n        return (_a = this.lines[lineNumber - 1]) !== null && _a !== void 0 ? _a : null;\n    };\n    /**\n     * Insert text at the cursor position.\n     * if some content is selected will replace it\n     */\n    Cursor.prototype.insert = function (content) {\n        if (!this.selection) {\n            this.insertAtCursor(content);\n            return;\n        }\n        var start = this.selection.selectionStart;\n        var end = this.selection.selectionEnd;\n        var newValue = this.value.slice(0, start) + this.normalizeSelection(content) + this.value.slice(end);\n        this.setValue(newValue);\n    };\n    Cursor.prototype.insertAtCursor = function (content) {\n        var cursorAt = this.position.cursorAt;\n        var newValue = this.value.slice(0, cursorAt) +\n            this.normalizeSelection(content) +\n            this.value.slice(cursorAt, this.value.length);\n        this.setValue(newValue);\n    };\n    /**\n     * Replace all selected lines\n     * if nothing is selected will replace the current line\n     *\n     * @param callback - The map function will be called once for each selected line and will replace the contents of the line with the result of the call\n     * @note line is considered as selected even if it is partially selected\n     */\n    Cursor.prototype.replaceCurrentLines = function (callback, options) {\n        var _this = this;\n        var _a, _b;\n        var _c = (options !== null && options !== void 0 ? options : {}).selectReplaced, selectReplaced = _c === void 0 ? false : _c;\n        var selectedLines = (_b = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.lines) !== null && _b !== void 0 ? _b : [this.lineAt(this.position.line.lineNumber)];\n        var content = selectedLines\n            .map(function (line, index) { return callback.call(_this, line, index, selectedLines); })\n            .filter(function (ctn) { return ctn !== null; }) // delete line if null\n            .join('\\n');\n        var start = selectedLines[0].startsAt;\n        var end = selectedLines[selectedLines.length - 1].endsAt;\n        var newValue = this.value.slice(0, start) +\n            this.normalizeSelection(content, selectReplaced ? 'SELECT_ALL' : 'TO_END') +\n            this.value.slice(end);\n        this.setValue(newValue);\n    };\n    /**\n     * TODO\n     * replace\n     */\n    Cursor.prototype.replaceLine = function (lineNumber, content) {\n        var line = this.lineAt(lineNumber);\n        if (!line) {\n            console.error('Unknown line number: ' + lineNumber);\n            return;\n        }\n        var start = line.startsAt;\n        var end = line.endsAt;\n        if (content === null) {\n            // line should be removed\n            this.setValue(this.value.slice(0, start - 1) + MARKER + this.value.slice(end));\n            return;\n        }\n        var newValue = this.value.slice(0, start) + this.normalizeSelection(content) + this.value.slice(end);\n        this.setValue(newValue);\n    };\n    /**\n     * Wraps selection inside markup\n     */\n    Cursor.prototype.wrap = function (markup, options) {\n        var _a, _b, _c, _d;\n        var _e = options !== null && options !== void 0 ? options : {}, _f = _e.unwrap, unwrap = _f === void 0 ? true : _f, _g = _e.placeholder, placeholder = _g === void 0 ? '' : _g;\n        var _h = Array.isArray(markup) ? markup : [markup, markup], prefix = _h[0], suffix = _h[1];\n        var text = this.value;\n        var start = (_b = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.selectionStart) !== null && _b !== void 0 ? _b : this.position.cursorAt;\n        var end = (_d = (_c = this.selection) === null || _c === void 0 ? void 0 : _c.selectionEnd) !== null && _d !== void 0 ? _d : this.position.cursorAt;\n        if (this.isSelectedWrappedWith(markup) && unwrap) {\n            var content_1 = [\n                text.slice(0, start - prefix.length),\n                MARKER,\n                text.slice(start, end),\n                MARKER,\n                text.slice(end + suffix.length),\n            ].join('');\n            this.setValue(content_1);\n            return;\n        }\n        var content = [\n            //\n            text.slice(0, start),\n            prefix,\n            MARKER,\n            text.slice(start, end) || placeholder,\n            MARKER,\n            suffix,\n            text.slice(end),\n        ].join('');\n        this.setValue(content);\n    };\n    Cursor.prototype.isSelectedWrappedWith = function (markup) {\n        var _a, _b, _c, _d;\n        var _e = Array.isArray(markup) ? markup : [markup, markup], prefix = _e[0], suffix = _e[1];\n        var start = (_b = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.selectionStart) !== null && _b !== void 0 ? _b : this.position.cursorAt;\n        var end = (_d = (_c = this.selection) === null || _c === void 0 ? void 0 : _c.selectionEnd) !== null && _d !== void 0 ? _d : this.position.cursorAt;\n        if (start - prefix.length < 0 || end - 1 + suffix.length > this.value.length - 1) {\n            return false;\n        }\n        var curPrefix = this.value.slice(start - prefix.length, start);\n        var curSuffix = this.value.slice(end, end + suffix.length);\n        return curPrefix === prefix && curSuffix === suffix;\n    };\n    Cursor.prototype.select = function (options) {\n        var isRange = function (opt) {\n            return (Object.prototype.hasOwnProperty.call(opt, 'start') && Object.prototype.hasOwnProperty.call(opt, 'end'));\n        };\n        if (isRange(options)) {\n            this.element.setSelectionRange(options.start, options.end);\n        }\n        else {\n            this.element.setSelectionRange(this.element.selectionStart + options.fromCurrentStart, this.element.selectionEnd + options.fromCurrentEnd);\n        }\n    };\n    Cursor.prototype.normalizeSelection = function (text, defaultBehavior) {\n        if (defaultBehavior === void 0) { defaultBehavior = 'TO_END'; }\n        if (text.includes(MARKER)) {\n            return text;\n        }\n        switch (defaultBehavior) {\n            case 'TO_START':\n                return \"\".concat(MARKER).concat(text);\n            case 'TO_END':\n                return \"\".concat(text).concat(MARKER);\n            case 'SELECT_ALL':\n                return \"\".concat(MARKER).concat(text).concat(MARKER);\n        }\n    };\n    Cursor.prototype.execRaw = function (text) {\n        var fIndex = text.indexOf(MARKER);\n        var lIndex = text.lastIndexOf(MARKER);\n        if (fIndex !== -1 && lIndex !== -1) {\n            text = text.replace(new RegExp(MARKER, 'g'), '');\n        }\n        var selectionStart = null;\n        var selectionEnd = null;\n        // TODO: handle case with more than 2 markers\n        if (fIndex !== -1) {\n            selectionStart = fIndex;\n            selectionEnd = lIndex === -1 || lIndex === fIndex ? null : lIndex - 1;\n        }\n        return { text: text, selectionStart: selectionStart, selectionEnd: selectionEnd };\n    };\n    Cursor.MARKER = MARKER;\n    return Cursor;\n}());\nexport { Cursor };\n", "import { clamp, escapeRegExp } from './utils';\nimport { Cursor } from './Cursor.new';\nexport var boldCommandHandler = function (_a) {\n    var cursor = _a.cursor, _b = _a.options, preferredBoldSyntax = _b.preferredBoldSyntax, boldPlaceholder = _b.boldPlaceholder;\n    cursor.wrap(preferredBoldSyntax, { placeholder: boldPlaceholder });\n};\nexport var italicCommandHandler = function (_a) {\n    var cursor = _a.cursor, _b = _a.options, preferredItalicSyntax = _b.preferredItalicSyntax, italicPlaceholder = _b.italicPlaceholder;\n    cursor.wrap(preferredItalicSyntax, { placeholder: italicPlaceholder });\n};\nexport var linkCommandHandler = function (_a) {\n    var _b;\n    var options = _a.options, cursor = _a.cursor;\n    var linkTextPlaceholder = options.linkTextPlaceholder, linkUrlPlaceholder = options.linkUrlPlaceholder;\n    var linkText = ((_b = cursor.selection) === null || _b === void 0 ? void 0 : _b.text) || linkTextPlaceholder;\n    var linkUrl = linkUrlPlaceholder;\n    cursor.insert(\"[\".concat(linkText, \"](\").concat(Cursor.MARKER).concat(linkUrl).concat(Cursor.MARKER, \")\"));\n};\nexport var imageCommandHandler = function (_a) {\n    var _b;\n    var options = _a.options, cursor = _a.cursor;\n    var imageTextPlaceholder = options.imageTextPlaceholder, imageUrlPlaceholder = options.imageUrlPlaceholder;\n    var imageText = ((_b = cursor.selection) === null || _b === void 0 ? void 0 : _b.text) || imageTextPlaceholder;\n    var imageUrl = imageUrlPlaceholder;\n    cursor.insert(\"![\".concat(imageText, \"](\").concat(Cursor.MARKER).concat(imageUrl).concat(Cursor.MARKER, \")\"));\n};\nexport var orderedListCommandHandler = function (_a) {\n    var _b, _c;\n    var cursor = _a.cursor;\n    var re = /(\\d+\\.){1,2}\\s+/;\n    var lines = (_c = (_b = cursor.selection) === null || _b === void 0 ? void 0 : _b.lines) !== null && _c !== void 0 ? _c : [cursor.position.line];\n    var needUndo = lines.every(function (line) { return re.test(line.text); });\n    cursor.replaceCurrentLines(function (line, index) { return (needUndo ? line.text.replace(re, '') : \"\".concat(index + 1, \". \").concat(line.text)); }, {\n        selectReplaced: Boolean(cursor.selection),\n    });\n};\nexport var unorderedListCommandHandler = function (_a) {\n    var _b, _c;\n    var cursor = _a.cursor, options = _a.options;\n    var syntax = options.preferredUnorderedListSyntax;\n    var re = new RegExp(\"^\".concat(escapeRegExp(syntax), \"\\\\s+\"));\n    var lines = (_c = (_b = cursor.selection) === null || _b === void 0 ? void 0 : _b.lines) !== null && _c !== void 0 ? _c : [cursor.position.line];\n    var needUndo = lines.every(function (line) { return re.test(line.text); });\n    cursor.replaceCurrentLines(function (line) { return (needUndo ? line.text.replace(re, '') : \"\".concat(syntax, \" \").concat(line.text)); }, {\n        selectReplaced: Boolean(cursor.selection),\n    });\n};\nexport var codeBlockCommandHandler = function (_a) {\n    // TODO handle cases when selection start/end located not on start/end of a line\n    // TODO: commend code doesn't works properly\n    // const startLine = cursor.selection?.lines[0] ?? cursor.position.line;\n    // const endLine = cursor.selection?.lines[0];\n    // const needNextLineBefore = startLine.startsAt !== 0;\n    // const needNextLineAfter = endLine && endLine.lineNumber !== startLine.lineNumber && endLine.endsAt < endLine.text.length;\n    var cursor = _a.cursor, codeBlockPlaceholder = _a.options.codeBlockPlaceholder;\n    cursor.wrap(['```\\n', '\\n```'], { placeholder: codeBlockPlaceholder });\n};\nexport var codeInlineCommandHandler = function (_a) {\n    var cursor = _a.cursor, codeInlinePlaceholder = _a.options.codeInlinePlaceholder;\n    cursor.wrap('`', { placeholder: codeInlinePlaceholder });\n};\nexport var codeCommandHandler = function (ctx) {\n    var _a, _b;\n    var selectedLines = (_b = (_a = ctx.cursor.selection) === null || _a === void 0 ? void 0 : _a.lines) !== null && _b !== void 0 ? _b : [];\n    if (selectedLines.length > 1) {\n        codeBlockCommandHandler(ctx);\n    }\n    else {\n        codeInlineCommandHandler(ctx);\n    }\n};\nexport var blockQuotesCommandHandler = function (_a) {\n    var cursor = _a.cursor, options = _a.options;\n    cursor.replaceCurrentLines(function (line, index, lines) {\n        return [\n            index === 0 ? '> ' : '',\n            index === 0 ? Cursor.MARKER : '',\n            line.text.replace(/^>\\s+/, '') || (index === 0 ? options.blockQuotesPlaceholder : ''),\n            index === lines.length - 1 ? Cursor.MARKER : '', // selection closing for the last line\n        ].join('');\n    });\n};\nexport var strikeThroughCommandHandler = function (_a) {\n    var cursor = _a.cursor, strikeThroughPlaceholder = _a.options.strikeThroughPlaceholder;\n    cursor.wrap('~~', { placeholder: strikeThroughPlaceholder });\n};\nexport var createHeadlineCommandHandler = function (level) {\n    return function (_a) {\n        var cursor = _a.cursor, options = _a.options;\n        var prefix = '#'.repeat(clamp(level, 1, 6)) + ' ';\n        var headlinePlaceholder = options.headlinePlaceholder;\n        var placeholder = headlinePlaceholder instanceof Function ? headlinePlaceholder(level) : headlinePlaceholder;\n        var currentLine = cursor.position.line;\n        var needUndo = currentLine.text.slice(0, level + 1) === prefix;\n        var content = currentLine.text.replace(/^#{0,6}\\s+/, '') || placeholder;\n        cursor.replaceLine(currentLine.lineNumber, \"\".concat(needUndo ? '' : prefix).concat(Cursor.MARKER).concat(content).concat(Cursor.MARKER));\n    };\n};\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { blockQuotesCommandHandler, boldCommandHandler, codeBlockCommandHandler, codeInlineCommandHandler, codeCommandHandler, createHeadlineCommandHandler, imageCommandHandler, italicCommandHandler, linkCommandHandler, orderedListCommandHandler, strikeThroughCommandHandler, unorderedListCommandHandler, } from './handlers';\nimport { metaCombination } from './utils';\nexport var buildInCommands = [\n    {\n        shortcut: metaCombination('b'),\n        handler: boldCommandHandler,\n        name: 'bold',\n    },\n    {\n        shortcut: metaCombination('i'),\n        handler: italicCommandHandler,\n        name: 'italic',\n    },\n    {\n        name: 'link',\n        handler: linkCommandHandler,\n    },\n    {\n        name: 'image',\n        handler: imageCommandHandler,\n    },\n    {\n        name: 'unordered-list',\n        handler: unorderedListCommandHandler,\n    },\n    {\n        name: 'ordered-list',\n        handler: orderedListCommandHandler,\n    },\n    {\n        name: 'code-block',\n        handler: codeBlockCommandHandler,\n    },\n    {\n        name: 'code-inline',\n        handler: codeInlineCommandHandler,\n    },\n    {\n        name: 'code',\n        handler: codeCommandHandler,\n    },\n    {\n        name: 'block-quotes',\n        handler: blockQuotesCommandHandler,\n    },\n    {\n        shortcut: __spreadArray(__spreadArray([], metaCombination('shift', 'x'), true), ['alt+shift+f5'], false),\n        name: 'strike-through',\n        handler: strikeThroughCommandHandler,\n    },\n    {\n        name: 'h1',\n        handler: createHeadlineCommandHandler(1),\n    },\n    {\n        name: 'h2',\n        handler: createHeadlineCommandHandler(2),\n    },\n    {\n        name: 'h3',\n        handler: createHeadlineCommandHandler(3),\n    },\n    {\n        name: 'h4',\n        handler: createHeadlineCommandHandler(4),\n    },\n    {\n        name: 'h5',\n        handler: createHeadlineCommandHandler(5),\n    },\n    {\n        name: 'h6',\n        handler: createHeadlineCommandHandler(6),\n    },\n];\n", "var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nimport { HistoryStack, escapeRegExp, getIncrementedOrderedListPrefix, isBtwOrEq, isImageURL, isURL, metaCombination, } from './utils';\nimport { Cursor } from './Cursor.new';\nimport Mousetrap from 'mousetrap';\n/**\n * Handle the paste event, if the pasted text is a URL and something is selected, it will be converted to link/image markup.\n */\nexport var linkPasteExtension = function (textarea) {\n    var cursor = new Cursor(textarea);\n    var pasteListener = function (event) {\n        var _a;\n        var LINK_MARKUP_RE = /\\[[^\\]]*\\]\\([^)]*\\)/g;\n        var clipboard = (_a = event === null || event === void 0 ? void 0 : event.clipboardData) === null || _a === void 0 ? void 0 : _a.getData('text');\n        // checks if selected is already inside link or image markup\n        var isSelectedInLinkMarkup = (function () {\n            if (!cursor.selection) {\n                return false;\n            }\n            // get all links markup ranges\n            var linkMarkupRangeList = Array.from(cursor.value.matchAll(LINK_MARKUP_RE)).map(function (match) { return [match.index, match.index + match[0].length]; });\n            // check if selected text is inside any of those ranges\n            return linkMarkupRangeList.some(function (_a) {\n                var start = _a[0], end = _a[1];\n                return isBtwOrEq(cursor.selection.selectionStart, start, end) ||\n                    isBtwOrEq(cursor.selection.selectionEnd, start, end);\n            });\n        })();\n        if (\n        // make sure there is something on the clipboard\n        !clipboard ||\n            // make sure there is url on the clipboard\n            !isURL(clipboard) ||\n            // make sure there something is selected\n            !cursor.selection ||\n            // make selected text is not a URL\n            isURL(cursor.selection.text) ||\n            // make sure that selected is not inside link/image markup\n            isSelectedInLinkMarkup) {\n            return;\n        }\n        // prevent default paste behavior\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        // workaround to avoid code copypaste\n        if (isImageURL(clipboard)) {\n            cursor.insert(\"![\".concat(cursor.selection.text, \"](\").concat(clipboard, \") \").concat(Cursor.MARKER));\n        }\n        else {\n            cursor.insert(\"[\".concat(cursor.selection.text, \"](\").concat(clipboard, \") \").concat(Cursor.MARKER));\n        }\n    };\n    textarea.addEventListener('paste', pasteListener);\n    return function () { return textarea.removeEventListener('paste', pasteListener); };\n};\n/**\n * Handle `tab`/`shift+tab` combination. Will insert or remove an intend depends on selection\n */\nexport var indentExtension = function (textarea) {\n    var mousetrap = Mousetrap(textarea);\n    var cursor = new Cursor(textarea);\n    mousetrap.bind('tab', function (event) {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        var indent = ' '.repeat(4);\n        if (!cursor.selection) {\n            // If nothing is selected simply add Indent at the current position\n            cursor.insert(\"\".concat(indent).concat(Cursor.MARKER));\n        }\n        else {\n            // If user is select line or lines - add Indent for each of this selected line, and keep selection\n            cursor.replaceCurrentLines(function (line) { return indent + line.text; }, { selectReplaced: true });\n        }\n    });\n    mousetrap.bind('shift+tab', function (event) {\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        cursor.replaceCurrentLines(function (line) { return line.text.replace(/\\s{0,4}/, ''); }, {\n            // select lines if something was selected\n            selectReplaced: Boolean(cursor.selection),\n        });\n    });\n    return function () { return mousetrap.reset(); };\n};\n/**\n * Handle next-line event. Will wrap current list sequence if needed\n */\nexport var prefixWrappingExtension = function (textarea, options) {\n    var cursor = new Cursor(textarea);\n    var ensureRegExp = function (value) {\n        return value instanceof RegExp ? value : new RegExp(escapeRegExp(value));\n    };\n    var getLineRegExp = function (prefixRe) { return new RegExp(\"^\\\\s*(\".concat(prefixRe.source, \").*$\")); };\n    var toConfig = function (value) {\n        return typeof value === 'string' ? { prefix: value, prefixPattern: ensureRegExp(value) } : value;\n    };\n    var getIndent = function (text) { var _a, _b; return ' '.repeat((_b = (_a = text.match(/^\\s*/)) === null || _a === void 0 ? void 0 : _a[0].length) !== null && _b !== void 0 ? _b : 0); };\n    var customConfigs = options.customPrefixWrapping.map(toConfig);\n    var buildInConfigs = [\n        {\n            prefix: \"\".concat(options.preferredUnorderedListSyntax, \" \"),\n            shouldBreakIfEmpty: true,\n            shouldSaveIndent: true,\n        },\n        {\n            prefixPattern: /(\\d+\\.){1,2}\\s+/,\n            prefix: function (line) { var _a, _b; return getIncrementedOrderedListPrefix((_b = (_a = /^(\\s*((\\d+\\.){1,2})\\s+.*)$/.exec(line.text)) === null || _a === void 0 ? void 0 : _a[2]) !== null && _b !== void 0 ? _b : '') + ' '; },\n            shouldBreakIfEmpty: true,\n            shouldSaveIndent: true,\n        },\n    ];\n    var configs = __spreadArray(__spreadArray([], customConfigs, true), buildInConfigs, true);\n    var keydownListener = function (event) {\n        if (event.code !== 'Enter') {\n            return;\n        }\n        // this code bellow should be executed before default behavior.\n        // entering line – is line on which the Enter was pressed\n        var enteringLine = cursor.lineAt(cursor.position.line.lineNumber);\n        var strictConfigs = configs.map(function (config) {\n            var _a;\n            var prefix = config.prefix instanceof Function ? config.prefix(enteringLine) : config.prefix;\n            var pattern = ensureRegExp((_a = config.prefixPattern) !== null && _a !== void 0 ? _a : prefix);\n            var shouldBreak = config.shouldBreakIfEmpty === false ? false : !enteringLine.text.replace(pattern, '').trim();\n            var shouldSaveIndent = config.shouldSaveIndent !== false;\n            return { prefix: prefix, pattern: pattern, shouldBreak: shouldBreak, shouldSaveIndent: shouldSaveIndent };\n        });\n        var matched = strictConfigs.find(function (_a) {\n            var pattern = _a.pattern;\n            return getLineRegExp(pattern).test(enteringLine.text);\n        });\n        if (!matched) {\n            // no matches\n            return;\n        }\n        var prefix = matched.prefix, shouldBreak = matched.shouldBreak, shouldSaveIndent = matched.shouldSaveIndent;\n        if (shouldBreak) {\n            // for a list line without content remove prefix of this line before default behavior\n            cursor.replaceLine(enteringLine.lineNumber, '');\n            return;\n        }\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        // if shouldSaveIndent need to wrap prefix within intent of entering line\n        var indent = shouldSaveIndent ? getIndent(enteringLine.text) : '';\n        cursor.insert(\"\\n\".concat(indent).concat(prefix).concat(Cursor.MARKER));\n    };\n    textarea.addEventListener('keydown', keydownListener);\n    return function () { return textarea.removeEventListener('keydown', keydownListener); };\n};\nexport var properLineRemoveBehaviorExtension = function (textarea) {\n    var cursor = new Cursor(textarea);\n    var mousetrap = Mousetrap(textarea);\n    mousetrap.bind(metaCombination('backspace'), function (event) {\n        if (cursor.position.line.text === '') {\n            event.preventDefault();\n            cursor.replaceLine(cursor.position.line.lineNumber, null);\n        }\n    });\n    return function () { return mousetrap.reset(); };\n};\nexport var orderedListAutoCorrectExtension = function (textarea) {\n    var cursor = new Cursor(textarea);\n    // eg: 1)content | 1) content | 1.1)content\n    var INVALID_PATTERN = /^\\s*(\\d+(\\.\\d+)?\\.?)\\)\\s*/;\n    var handler = function (event) {\n        var _a, _b;\n        if (event.code !== 'Enter') {\n            return;\n        }\n        var lineText = cursor.position.line.text;\n        var match = lineText.match(INVALID_PATTERN);\n        if (!match) {\n            return;\n        }\n        event === null || event === void 0 ? void 0 : event.preventDefault();\n        var indent = ' '.repeat((_b = (_a = lineText.match(/^\\s*/)) === null || _a === void 0 ? void 0 : _a[0].length) !== null && _b !== void 0 ? _b : 0);\n        var orderPrefix = match[1];\n        var newLineContent = \"\".concat(indent).concat(orderPrefix, \". \").concat(lineText.slice(match[0].length));\n        cursor.replaceLine(cursor.position.line.lineNumber, newLineContent);\n        textarea.dispatchEvent(new KeyboardEvent('keydown', event));\n    };\n    textarea.addEventListener('keydown', handler);\n    return function () { return textarea.removeEventListener('keydown', handler); };\n};\nvar toSnapshot = function (textarea) { return ({\n    value: textarea.value,\n    selectionStart: textarea.selectionStart,\n    selectionEnd: textarea.selectionEnd,\n}); };\nexport var fixUndoBehaviorExtension = function (textarea) {\n    var stack = new HistoryStack(200);\n    stack.push(toSnapshot(textarea));\n    var cursor = new Cursor(textarea);\n    var mousetrap = Mousetrap(textarea);\n    var skipEvent = false;\n    textarea.addEventListener('input', function () {\n        var _a;\n        if (skipEvent) {\n            skipEvent = false;\n            return;\n        }\n        if (textarea.value === ((_a = stack.peek(1)) === null || _a === void 0 ? void 0 : _a.value)) {\n            return;\n        }\n        stack.push(toSnapshot(textarea));\n    });\n    mousetrap.bind(metaCombination('z'), function (event) {\n        event.preventDefault();\n        var previous = stack.peek(2);\n        if (!previous) {\n            return;\n        }\n        skipEvent = true;\n        stack.pop(); // remove current snapshot\n        cursor.setValue(previous.value);\n        textarea.selectionStart = previous.selectionStart;\n        textarea.selectionEnd = previous.selectionEnd;\n    });\n};\n", "export var BUILT_IN_COMMANDS = [\n    'bold',\n    'italic',\n    'strike-through',\n    'h1',\n    'h2',\n    'h3',\n    'h4',\n    'h5',\n    'h6',\n    'unordered-list',\n    'ordered-list',\n    'code-block',\n    'code-inline',\n    'code',\n    'link',\n    'image',\n    'block-quotes',\n];\nexport var defaultTextareaMarkdownOptions = {\n    preferredUnorderedListSyntax: '-',\n    preferredBoldSyntax: '**',\n    preferredItalicSyntax: '*',\n    enableIndentExtension: true,\n    enableLinkPasteExtension: true,\n    enablePrefixWrappingExtension: true,\n    enableProperLineRemoveBehaviorExtension: true,\n    enableOrderedListAutoCorrectExtension: false,\n    customPrefixWrapping: [],\n    boldPlaceholder: 'bold',\n    italicPlaceholder: 'italic',\n    strikeThroughPlaceholder: 'strike through',\n    codeInlinePlaceholder: 'code',\n    codeBlockPlaceholder: 'code block',\n    orderedListPlaceholder: 'ordered list',\n    unorderedListPlaceholder: 'unordered list',\n    headlinePlaceholder: function (lvl) { return \"headline \".concat(lvl); },\n    blockQuotesPlaceholder: 'quote',\n    linkTextPlaceholder: 'example',\n    linkUrlPlaceholder: 'url',\n    imageTextPlaceholder: 'example',\n    imageUrlPlaceholder: 'image.png',\n};\n"],
  "mappings": "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",
  "names": ["window", "document", "undefined", "i", "Mousetrap", "method", "import_mousetrap", "HistoryStack", "Cursor", "line", "__spreadArray", "_a", "Mousetrap", "prefix", "shouldBreak", "shouldSaveIndent", "__spreadArray", "Mousetrap"]
}
