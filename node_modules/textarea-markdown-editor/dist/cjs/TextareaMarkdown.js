"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.TextareaMarkdown = void 0;
var react_1 = __importStar(require("react"));
var bootstrap_1 = require("./bootstrap");
var utils_1 = require("./utils");
/**
 * Enhanced textarea element with markdown formatting features
 */
exports.TextareaMarkdown = (0, react_1.forwardRef)(function (_a, ref) {
    var commands = _a.commands, options = _a.options, props = __rest(_a, ["commands", "options"]);
    var textareaRef = (0, react_1.useRef)(null);
    useBootstrap({
        ref: ref,
        options: options,
        commands: commands,
        textareaRef: textareaRef,
    });
    return react_1.default.createElement("textarea", __assign({ ref: textareaRef }, props));
});
/**
 * Allows you to wrap a custom textarea component
 */
var TextareaMarkdownWrapper = (0, react_1.forwardRef)(function (_a, ref) {
    var children = _a.children, commands = _a.commands, options = _a.options;
    var textareaRef = (0, react_1.useRef)();
    var holderElementRef = (0, react_1.useRef)(null);
    (0, react_1.useEffect)(function () {
        if (!textareaRef.current && holderElementRef.current) {
            if (react_1.default.Children.count(children) !== 1) {
                throw new TypeError('TextareaMarkdownWrapper: expected single react-element as a child');
            }
            textareaRef.current = (0, utils_1.findTextArea)(holderElementRef.current.previousElementSibling);
        }
    }, [children]);
    useBootstrap({
        ref: ref,
        options: options,
        commands: commands,
        textareaRef: textareaRef,
    });
    return (react_1.default.createElement(react_1.Fragment, null,
        children,
        react_1.default.createElement("div", { style: { display: 'none' }, ref: holderElementRef })));
});
exports.TextareaMarkdown.Wrapper = TextareaMarkdownWrapper;
var useBootstrap = function (_a) {
    var commands = _a.commands, options = _a.options, ref = _a.ref, textareaRef = _a.textareaRef;
    (0, react_1.useEffect)(function () {
        if (!textareaRef.current) {
            return;
        }
        var _a = (0, bootstrap_1.bootstrapTextareaMarkdown)(textareaRef.current, {
            commands: commands,
            options: options,
        }), dispose = _a.dispose, trigger = _a.trigger, cursor = _a.cursor;
        // initialize the TextareaMarkdown ref
        if ((0, utils_1.isRefObject)(ref)) {
            ref.current = Object.assign(textareaRef.current, { trigger: trigger, cursor: cursor });
        }
        return dispose;
        // reinitialize only on demand
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [JSON.stringify({ commands: commands, options: options })]);
};
