"use strict";
var __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {
    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {
        if (ar || !(i in from)) {
            if (!ar) ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
        }
    }
    return to.concat(ar || Array.prototype.slice.call(from));
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildInCommands = void 0;
var handlers_1 = require("./handlers");
var utils_1 = require("./utils");
exports.buildInCommands = [
    {
        shortcut: (0, utils_1.metaCombination)('b'),
        handler: handlers_1.boldCommandHandler,
        name: 'bold',
    },
    {
        shortcut: (0, utils_1.metaCombination)('i'),
        handler: handlers_1.italicCommandHandler,
        name: 'italic',
    },
    {
        name: 'link',
        handler: handlers_1.linkCommandHandler,
    },
    {
        name: 'image',
        handler: handlers_1.imageCommandHandler,
    },
    {
        name: 'unordered-list',
        handler: handlers_1.unorderedListCommandHandler,
    },
    {
        name: 'ordered-list',
        handler: handlers_1.orderedListCommandHandler,
    },
    {
        name: 'code-block',
        handler: handlers_1.codeBlockCommandHandler,
    },
    {
        name: 'code-inline',
        handler: handlers_1.codeInlineCommandHandler,
    },
    {
        name: 'code',
        handler: handlers_1.codeCommandHandler,
    },
    {
        name: 'block-quotes',
        handler: handlers_1.blockQuotesCommandHandler,
    },
    {
        shortcut: __spreadArray(__spreadArray([], (0, utils_1.metaCombination)('shift', 'x'), true), ['alt+shift+f5'], false),
        name: 'strike-through',
        handler: handlers_1.strikeThroughCommandHandler,
    },
    {
        name: 'h1',
        handler: (0, handlers_1.createHeadlineCommandHandler)(1),
    },
    {
        name: 'h2',
        handler: (0, handlers_1.createHeadlineCommandHandler)(2),
    },
    {
        name: 'h3',
        handler: (0, handlers_1.createHeadlineCommandHandler)(3),
    },
    {
        name: 'h4',
        handler: (0, handlers_1.createHeadlineCommandHandler)(4),
    },
    {
        name: 'h5',
        handler: (0, handlers_1.createHeadlineCommandHandler)(5),
    },
    {
        name: 'h6',
        handler: (0, handlers_1.createHeadlineCommandHandler)(6),
    },
];
