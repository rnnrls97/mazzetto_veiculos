import { bundledLanguages, getHighlighter } from 'shiki';
import rehypeShikiFromHighlighter from './core.mjs';
import 'hast-util-to-string';
import 'unist-util-visit';

const rehypeShiki = function(options = {}) {
  const themeNames = ("themes" in options ? Object.values(options.themes) : [options.theme]).filter(Boolean);
  const langs = options.langs || Object.keys(bundledLanguages);
  const ctx = this;
  let promise;
  return async function(tree) {
    if (!promise) {
      promise = getHighlighter({
        themes: themeNames,
        langs
      }).then((highlighter) => rehypeShikiFromHighlighter.call(ctx, highlighter, options));
    }
    const handler = await promise;
    return handler(tree);
  };
};

export { rehypeShiki as default };
